CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)

FIND_PACKAGE(deal.II 9.1.1 QUIET
  HINTS ${deal.II_DIR} ${DEAL_II_DIR} ../ ../../ $ENV{DEAL_II_DIR}
  )
IF(NOT ${deal.II_FOUND})
  MESSAGE(FATAL_ERROR "\n"
    "*** Could not locate a (sufficiently recent) version of deal.II. ***\n\n"
    "You may want to either pass a flag -DDEAL_II_DIR=/path/to/deal.II to cmake\n"
    "or set an environment variable \"DEAL_II_DIR\" that contains this path."
    )
ENDIF()

DEAL_II_INITIALIZE_CACHED_VARIABLES()

PROJECT(dealammps)
add_executable(dealammps ../dealammps.cc)
DEAL_II_SETUP_TARGET(dealammps)

add_executable(init_material ../init_material.cc)
DEAL_II_SETUP_TARGET(init_material)

add_executable(strain_md ../strain_md.cc)
DEAL_II_SETUP_TARGET(strain_md)

add_executable(test18 ../test18.cc)
DEAL_II_SETUP_TARGET(test18)


## Include LAMMPS sources repository
include_directories(
  /home/jinzhen/projects/lammps-17Nov16/src/
  )
#include_directories("${CMAKE_SOURCE_DIR}/headers")
#include_directories("$ENV{DEAL_II_DIR}/../include")
#add_subdirectory(headers)
## Include BOOST sources repository
#FIND_PACKAGE( Boost 1.58 COMPONENTS filesystem mpi REQUIRED )
#include_directories( ${Boost_INCLUDE_DIR} )

## Include LAMMPS library shared .so (or static .a)
target_link_libraries(dealammps /home/jinzhen/projects/lammps-17Nov16/src/liblammps.so)
target_link_libraries(init_material /home/jinzhen/projects/lammps-17Nov16/src/liblammps.so)
target_link_libraries(strain_md /home/jinzhen/projects/lammps-17Nov16/src/liblammps.so)
target_link_libraries(dealammps LINK_PUBLIC   ${Boost_LIBRARIES})
target_link_libraries(init_material LINK_PUBLIC  ${Boost_LIBRARIES})
target_link_libraries(strain_md  LINK_PUBLIC ${Boost_LIBRARIES})

#target_link_libraries(dealammps LINK_PUBLIC ${Boost_LIBRARIES})
#target_link_libraries(init_material LINK_PUBLIC ${Boost_LIBRARIES})

## Create additional targets to the standard DEAL.II targets
## Use "aprun" as follow: e.g "make aprun NTHR=24"
ADD_CUSTOM_TARGET(deepclean  COMMENT "Complete clean"
                             DEPENDS buildclean
                             COMMAND rm
                             ARGS -rf CMakeFiles cmake_install.cmake CMakeCache.txt Makefile
  )

ADD_CUSTOM_TARGET(buildclean COMMENT "Build clean"
                             DEPENDS outclean
                             COMMAND rm
                             ARGS -rf dealammps init_material strain_md
  )

ADD_CUSTOM_TARGET(outclean COMMENT "Output clean"
                           COMMAND rm
                           ARGS -rf core output.* error.* log.* *_log *_output *_restart
  )
